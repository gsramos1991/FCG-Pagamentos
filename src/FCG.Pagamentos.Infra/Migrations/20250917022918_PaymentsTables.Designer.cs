// <auto-generated />
using System;
using FCG.Pagamentos.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCG.Pagamentos.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250917022918_PaymentsTables")]
    partial class PaymentsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusPayment")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.HasIndex("JogoId")
                        .HasDatabaseName("IX_PAYMENTS_JOGOID");

                    b.HasIndex("StatusPayment")
                        .HasDatabaseName("IX_PAYMENTS_STATUSPAYMENT");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.PaymentEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PayLoad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId", "Version")
                        .IsUnique()
                        .HasDatabaseName("UX_PaymentEvents_PaymentId_Version");

                    b.ToTable("PaymentEvents", (string)null);
                });

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.PaymentItem", b =>
                {
                    b.Property<Guid>("PaymentItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentItemId");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("IX_PaymentItems_ItemId");

                    b.HasIndex("PaymentId")
                        .HasDatabaseName("IX_PaymentItems_PaymentId");

                    b.ToTable("PaymentItens", (string)null);
                });

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.PaymentEvent", b =>
                {
                    b.HasOne("FCG.Pagamentos.Business.Model.Payment", null)
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.PaymentItem", b =>
                {
                    b.HasOne("FCG.Pagamentos.Business.Model.Payment", null)
                        .WithMany("Items")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FCG.Pagamentos.Business.Model.Payment", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
